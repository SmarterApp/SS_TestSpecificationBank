/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testspecbank.client;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.not;
import static org.hamcrest.CoreMatchers.notNullValue;
import static org.hamcrest.CoreMatchers.nullValue;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.springframework.test.web.client.match.MockRestRequestMatchers.method;
import static org.springframework.test.web.client.match.MockRestRequestMatchers.requestTo;
import static org.springframework.test.web.client.response.MockRestResponseCreators.withSuccess;

import org.junit.Test;
import org.opentestsystem.authoring.testspecbank.domain.tib.ExportSetClientObj;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;

/**
 * Test out the server profile which requires an externally defined properties file.
 * Tests are ignored since this really isn't portable.
 */
public class TestItemBankClientTest extends AbstractClientTest {

    private static final String MOCK_EXPORT_SET = "{" +
            "\"id\" : \"exportSet1\"," +
            "\"tenantId\" : \"my-tenant-id\"," +
            "\"status\" : \"WAITING_TO_EXPORT\"," +
            "\"items\": [ " +
            "{ \"identifier\": \"apipitem_10000\", \"version\": \"1.1\" }," +
            "{ \"identifier\": \"apipitem_100001\", \"version\": \"1.2\" }" +
            "]," +
            "\"timeRequested\": \"2014-03-11T13:29:33.702-05:00\"," +
            "\"exportCompleted\": null," +
            "\"url\": \"/exportSet/531f560de4b045d2a5332b91\"" +
            "}";

    @Test
    public void clientIsValid() {
        assertThat(this.client, notNullValue());
    }

    @Test
    public void getExportSet() throws InterruptedException {
        this.mockServer
                .expect(requestTo("exportSet/export-set-id"))
                .andExpect(method(HttpMethod.GET))
                .andRespond(withSuccess(MOCK_EXPORT_SET, MediaType.APPLICATION_JSON));

        final ExportSetClientObj foundExportSet = this.client.getExportSet("export-set-id");
        assertThat(foundExportSet, is(not(nullValue())));
        assertThat(foundExportSet.getItems().size(), is(2));
        assertThat(foundExportSet.getId(), is("exportSet1"));
    }

    @Test
    public void requestExport() throws InterruptedException {
        final ExportSetClientObj exportSetToSave = FACTORY.manufacturePojo(ExportSetClientObj.class);

        this.mockServer.expect(requestTo("exportSet")).andExpect(method(HttpMethod.POST))
                .andRespond(withSuccess(MOCK_EXPORT_SET, MediaType.APPLICATION_JSON));

        final ExportSetClientObj foundExportSet = this.client.requestExport(exportSetToSave);
        assertThat(foundExportSet, is(not(nullValue())));
        assertThat(foundExportSet.getItems().size(), is(2));
        assertThat(foundExportSet.getId(), is("exportSet1"));
    }

}
