/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 *
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testspecbank.domain.search;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

import org.opentestsystem.shared.search.domain.AbstractSearchRequest;
import org.opentestsystem.shared.search.domain.SearchFilter;
import org.opentestsystem.shared.search.domain.SearchFilter.Operator;
import org.opentestsystem.shared.search.domain.SearchFilter.SearchDataType;

/**
 * SearchRequest class for the TestSpecification domain object
 */
public class TestSpecificationSearchRequest extends AbstractSearchRequest {

    private static final long serialVersionUID = -8963310856929616749L;

    private static final String SEARCH_RESOURCE = "/testSpecification";

    private static final List<SearchFilter> SEARCH_FILTERS = Arrays.asList(new SearchFilter[] {
            new SearchFilter("id", "id", Operator.WLD_REG, SearchDataType.String),
            new SearchFilter("name", "name", Operator.WLD_REG, SearchDataType.String),
            new SearchFilter("version", "version", Operator.WLD_REG, SearchDataType.String),
            new SearchFilter("label", "label", Operator.WLD_REG, SearchDataType.String),
            new SearchFilter("category", "category", Operator.WLD_REG, SearchDataType.String),
            new SearchFilter("exportPackageStatus", "exportPackage.status", Operator.EQ, SearchDataType.String),
            new SearchFilter("retired", "retired", Operator.EQ, SearchDataType.Boolean),
            new SearchFilter("subjectAbbreviation"),
            new SearchFilter("subjectName"),
            new SearchFilter("subjectAbbreviationContains", "subjectAbbreviation", Operator.WLD_REG, SearchDataType.String),
            new SearchFilter("type"),
            new SearchFilter("grade"),
            new SearchFilter("purpose"),
            new SearchFilter("tenantSet") });

    public TestSpecificationSearchRequest(final Map<String, String[]> inRequestMap) {
        super(inRequestMap);
    }

    @Override
    public boolean isValid() {
        final String[] tenantIds = getSearchCriteria().get("tenantSet");
        return tenantIds != null;
    }

    @Override
    public List<SearchFilter> getSearchFilters() {
        return SEARCH_FILTERS;
    }

    @Override
    public String getSearchResource() {
        return SEARCH_RESOURCE;
    }
}
