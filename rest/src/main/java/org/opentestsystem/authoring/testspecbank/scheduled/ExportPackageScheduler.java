/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testspecbank.scheduled;

import java.util.List;
import java.util.Set;

import org.opentestsystem.authoring.testspecbank.domain.ExportPackageStatus;
import org.opentestsystem.authoring.testspecbank.domain.TestSpecification;
import org.opentestsystem.authoring.testspecbank.service.TestSpecificationService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.google.common.base.Predicate;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.Sets;

@Component("exportPackageScheduler")
public class ExportPackageScheduler {

    private static List<ExportPackageStatus> EXCLUDE_STATUSES = ImmutableList.of(ExportPackageStatus.COMPLETE, ExportPackageStatus.FAILED);
    private static final Predicate<ExportPackageStatus> EXCLUDE_STATUS_FILTER = new Predicate<ExportPackageStatus>() {
        @Override
        public boolean apply(final ExportPackageStatus exportStatus) {
            return !EXCLUDE_STATUSES.contains(exportStatus);
        }
    };
    private static final Set<ExportPackageStatus> EXPORT_STATUSES = Sets.filter(Sets.newHashSet(ExportPackageStatus.values()), EXCLUDE_STATUS_FILTER);

    @Autowired
    private TestSpecificationService testSpecificationService;

    public void beginExportProcess() {
        final List<TestSpecification> requestedExports = this.testSpecificationService.getTestSpecificationsByExportPackageStatusIn(EXPORT_STATUSES, true);

        for (final TestSpecification testSpecification : requestedExports) {
            switch (testSpecification.getExportPackage().getStatus()) {
            case SUBMITTED:
                this.testSpecificationService.loadTestSpecification(testSpecification);
                break;
            case PENDING_ITEM_EXPORT:
                this.testSpecificationService.checkTibExportStatus(testSpecification);
                break;
            case PENDING_PACKAGE_CREATION:
                this.testSpecificationService.buildExportPackageZip(testSpecification);
                break;
            case PENDING_SFTP:
                this.testSpecificationService.transferExportPackage(testSpecification);
                break;
            default:
                break;
            }
        }
    }
}
