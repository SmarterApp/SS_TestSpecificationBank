/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testspecbank.domain;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;
import org.opentestsystem.authoring.testspecbank.domain.tib.ExportSetClientObj;
import org.opentestsystem.authoring.testspecbank.domain.tib.ExportStatus;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@JsonIgnoreProperties(ignoreUnknown = true)
public class TibExportDetails {

    private String id;
    private ExportStatus status;
    private boolean downloadComplete;

    public TibExportDetails() {
    }

    public TibExportDetails(final ExportSetClientObj exportSet) {
        super();
        this.id = exportSet.getId();
        this.status = exportSet.getStatus();
        this.downloadComplete = false;
    }

    public String getId() {
        return id;
    }

    public void setId(final String id) {
        this.id = id;
    }

    public ExportStatus getStatus() {
        return status;
    }

    public void setStatus(final ExportStatus status) {
        this.status = status;
    }

    public boolean isDownloadComplete() {
        return downloadComplete;
    }

    public void setDownloadComplete(final boolean downloadComplete) {
        this.downloadComplete = downloadComplete;
    }

    @Override
    public boolean equals(final Object obj) {
        return EqualsBuilder.reflectionEquals(this, obj);
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
    }

    @Override
    public int hashCode() {
        return HashCodeBuilder.reflectionHashCode(this);
    }
}
