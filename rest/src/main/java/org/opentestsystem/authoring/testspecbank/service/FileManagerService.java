/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testspecbank.service;

import java.io.File;

/**
 * Service to create/retrieve/update files and directories on the configured file system
 */
public interface FileManagerService {
    /**
     * Creates an empty directory under the configured temp directory (if directory already exists it will empty it out).
     * 
     * @param directoryName - the directory to create
     * @return File object representing the created directory
     */
    File initializeCleanDirectory(String directoryName);

    /**
     * Creates a file under the configured temp directory.
     * 
     * @param parentDirectoryName - the directory to create the file in (will be a sub-directory to the configured temp directory)
     * @param fileName - the fileName to create
     * @return File object representing the created file
     */
    File initializeFile(String parentDirectoryName, String fileName);

    /**
     * Returns the full path of the given fileName under the configured temp directory.
     * 
     * @param relativeFilePath - file to get the full path for
     * @return String representing the full path of the file (including the temp directory)
     */
    String getFullPath(String relativeFilePath);

    /**
     * Writes the given data into the specified file under the configured temp directory.
     * 
     * @param filePath - the file to write to (will be created under the configured temp directory)
     * @param sourceXml - the data to write
     */
    void writeFile(String filePath, byte[] sourceXml);

    /**
     * Creates a zip file out of the given sourceDirectory
     * 
     * @param sourceDirectory - the directory to uild a zip file out of
     * @param targetZipFileName - name of the zip file to create (will be created under the configured temp directory)
     */
    void buildZipFromDirectory(File sourceDirectory, String targetZipFileName);
}
